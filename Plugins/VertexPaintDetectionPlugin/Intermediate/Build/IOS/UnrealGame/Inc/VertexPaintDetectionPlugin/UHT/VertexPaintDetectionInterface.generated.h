// Copyright Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Generated code exported from UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

// IWYU pragma: private, include "VertexPaintDetectionInterface.h"
#include "UObject/ObjectMacros.h"
#include "UObject/ScriptMacros.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
class AActor;
class UClothingAssetBase; struct FVertexDetectClothSettingsStruct;
class UPrimitiveComponent;
class USkeletalMeshComponent;
struct FVertexDetectAdditionalDataToPassThrough;
struct FVertexDetectAmountOfPaintedColorsOfEachChannel;
struct FVertexDetectAvarageColorInAreaInfo;
struct FVertexDetectClosestVertexDataResultStruct;
struct FVertexDetectEstimatedColorAtHitLocationResultStruct;
struct FVertexDetectGetColorsOnlyStruct;
struct FVertexDetectInfoStruct;
struct FVertexDetectMeshDataStruct;
struct FVertexDetectTaskResultInfo;
struct FVertexDetectVertexColorsOnEachBone;
struct FVertexPaintAtLocationStruct;
struct FVertexPaintColorSnippetStruct;
struct FVertexPainthWithinAreaStruct;
struct FVertexPaintOnEntireMeshStruct;
struct FVertexPaintStruct;
#ifdef VERTEXPAINTDETECTIONPLUGIN_VertexPaintDetectionInterface_generated_h
#error "VertexPaintDetectionInterface.generated.h already included, missing '#pragma once' in VertexPaintDetectionInterface.h"
#endif
#define VERTEXPAINTDETECTIONPLUGIN_VertexPaintDetectionInterface_generated_h

#define FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_SPARSE_DATA
#define FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_RPC_WRAPPERS \
	virtual void ClothEndOverlappingMesh_Implementation(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp) {}; \
	virtual void ClothBeginOverlappingMesh_Implementation(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp) {}; \
	virtual TMap<UClothingAssetBase*,FVertexDetectClothSettingsStruct> GetSkeletalMeshClothPhysicsSettings_Implementation(USkeletalMeshComponent* skeletalMeshComponentTryingToGetClothSettingsFor) { return TMap<UClothingAssetBase*,FVertexDetectClothSettingsStruct>(); }; \
	virtual void ColorsAppliedOnActor_Implementation(FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintStruct paintedOnActorSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData) {}; \
	virtual void PaintedOnActor_PaintColorSnippet_Implementation(FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintColorSnippetStruct paintedColorSnippetSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData) {}; \
	virtual void PaintedOnActor_EntireMesh_Implementation(FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintOnEntireMeshStruct paintedEntireMeshSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData) {}; \
	virtual void PaintedOnActor_WithinArea_Implementation(FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPainthWithinAreaStruct paintedWithinAreaSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData) {}; \
	virtual void PaintedOnActor_AtLocation_Implementation(FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintAtLocationStruct paintedAtLocationSettings, FVertexDetectClosestVertexDataResultStruct closestVertexColorResult, FVertexDetectEstimatedColorAtHitLocationResultStruct estimatedColorAtHitLocationResult, FVertexDetectAvarageColorInAreaInfo avarageColorInAreaInfo, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData) {}; \
	virtual void GetAllVertexColorsOnlyOnActor_Implementation(FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexDetectGetColorsOnlyStruct gotAllVertexColorsWithSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData) {}; \
	virtual void GetClosestVertexDataOnActor_Implementation(FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexDetectInfoStruct detectedMeshWithSettings, FVertexDetectClosestVertexDataResultStruct closestVertexColorResult, FVertexDetectEstimatedColorAtHitLocationResultStruct estimatedColorAtHitLocationResult, FVertexDetectAvarageColorInAreaInfo avarageColorInAreaInfo, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData) {}; \
 \
	DECLARE_FUNCTION(execClothEndOverlappingMesh); \
	DECLARE_FUNCTION(execClothBeginOverlappingMesh); \
	DECLARE_FUNCTION(execGetSkeletalMeshClothPhysicsSettings); \
	DECLARE_FUNCTION(execColorsAppliedOnActor); \
	DECLARE_FUNCTION(execPaintedOnActor_PaintColorSnippet); \
	DECLARE_FUNCTION(execPaintedOnActor_EntireMesh); \
	DECLARE_FUNCTION(execPaintedOnActor_WithinArea); \
	DECLARE_FUNCTION(execPaintedOnActor_AtLocation); \
	DECLARE_FUNCTION(execGetAllVertexColorsOnlyOnActor); \
	DECLARE_FUNCTION(execGetClosestVertexDataOnActor);


#define FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_RPC_WRAPPERS_NO_PURE_DECLS \
	virtual void ClothEndOverlappingMesh_Implementation(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp) {}; \
	virtual void ClothBeginOverlappingMesh_Implementation(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp) {}; \
	virtual TMap<UClothingAssetBase*,FVertexDetectClothSettingsStruct> GetSkeletalMeshClothPhysicsSettings_Implementation(USkeletalMeshComponent* skeletalMeshComponentTryingToGetClothSettingsFor) { return TMap<UClothingAssetBase*,FVertexDetectClothSettingsStruct>(); }; \
	virtual void ColorsAppliedOnActor_Implementation(FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintStruct paintedOnActorSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData) {}; \
	virtual void PaintedOnActor_PaintColorSnippet_Implementation(FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintColorSnippetStruct paintedColorSnippetSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData) {}; \
	virtual void PaintedOnActor_EntireMesh_Implementation(FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintOnEntireMeshStruct paintedEntireMeshSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData) {}; \
	virtual void PaintedOnActor_WithinArea_Implementation(FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPainthWithinAreaStruct paintedWithinAreaSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData) {}; \
	virtual void PaintedOnActor_AtLocation_Implementation(FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintAtLocationStruct paintedAtLocationSettings, FVertexDetectClosestVertexDataResultStruct closestVertexColorResult, FVertexDetectEstimatedColorAtHitLocationResultStruct estimatedColorAtHitLocationResult, FVertexDetectAvarageColorInAreaInfo avarageColorInAreaInfo, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData) {}; \
	virtual void GetAllVertexColorsOnlyOnActor_Implementation(FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexDetectGetColorsOnlyStruct gotAllVertexColorsWithSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData) {}; \
	virtual void GetClosestVertexDataOnActor_Implementation(FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexDetectInfoStruct detectedMeshWithSettings, FVertexDetectClosestVertexDataResultStruct closestVertexColorResult, FVertexDetectEstimatedColorAtHitLocationResultStruct estimatedColorAtHitLocationResult, FVertexDetectAvarageColorInAreaInfo avarageColorInAreaInfo, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData) {}; \
 \
	DECLARE_FUNCTION(execClothEndOverlappingMesh); \
	DECLARE_FUNCTION(execClothBeginOverlappingMesh); \
	DECLARE_FUNCTION(execGetSkeletalMeshClothPhysicsSettings); \
	DECLARE_FUNCTION(execColorsAppliedOnActor); \
	DECLARE_FUNCTION(execPaintedOnActor_PaintColorSnippet); \
	DECLARE_FUNCTION(execPaintedOnActor_EntireMesh); \
	DECLARE_FUNCTION(execPaintedOnActor_WithinArea); \
	DECLARE_FUNCTION(execPaintedOnActor_AtLocation); \
	DECLARE_FUNCTION(execGetAllVertexColorsOnlyOnActor); \
	DECLARE_FUNCTION(execGetClosestVertexDataOnActor);


#define FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_ACCESSORS
#define FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_CALLBACK_WRAPPERS
#define FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UVertexPaintDetectionInterface(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_ABSTRACT_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UVertexPaintDetectionInterface) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UVertexPaintDetectionInterface); \
	DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UVertexPaintDetectionInterface); \
private: \
	/** Private move- and copy-constructors, should never be used */ \
	NO_API UVertexPaintDetectionInterface(UVertexPaintDetectionInterface&&); \
	NO_API UVertexPaintDetectionInterface(const UVertexPaintDetectionInterface&); \
public: \
	NO_API virtual ~UVertexPaintDetectionInterface();


#define FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UVertexPaintDetectionInterface(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private move- and copy-constructors, should never be used */ \
	NO_API UVertexPaintDetectionInterface(UVertexPaintDetectionInterface&&); \
	NO_API UVertexPaintDetectionInterface(const UVertexPaintDetectionInterface&); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UVertexPaintDetectionInterface); \
	DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UVertexPaintDetectionInterface); \
	DEFINE_ABSTRACT_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UVertexPaintDetectionInterface) \
	NO_API virtual ~UVertexPaintDetectionInterface();


#define FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_GENERATED_UINTERFACE_BODY() \
private: \
	static void StaticRegisterNativesUVertexPaintDetectionInterface(); \
	friend struct Z_Construct_UClass_UVertexPaintDetectionInterface_Statics; \
public: \
	DECLARE_CLASS(UVertexPaintDetectionInterface, UInterface, COMPILED_IN_FLAGS(CLASS_Abstract | CLASS_Interface), CASTCLASS_None, TEXT("/Script/VertexPaintDetectionPlugin"), NO_API) \
	DECLARE_SERIALIZER(UVertexPaintDetectionInterface)


#define FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_GENERATED_BODY_LEGACY \
		PRAGMA_DISABLE_DEPRECATION_WARNINGS \
	FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_GENERATED_UINTERFACE_BODY() \
	FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_STANDARD_CONSTRUCTORS \
	PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_GENERATED_BODY \
	PRAGMA_DISABLE_DEPRECATION_WARNINGS \
	FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_GENERATED_UINTERFACE_BODY() \
	FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_ENHANCED_CONSTRUCTORS \
private: \
	PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_INCLASS_IINTERFACE_NO_PURE_DECLS \
protected: \
	virtual ~IVertexPaintDetectionInterface() {} \
public: \
	typedef UVertexPaintDetectionInterface UClassType; \
	typedef IVertexPaintDetectionInterface ThisClass; \
	static void Execute_ClothBeginOverlappingMesh(UObject* O, UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp); \
	static void Execute_ClothEndOverlappingMesh(UObject* O, UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp); \
	static void Execute_ColorsAppliedOnActor(UObject* O, FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintStruct paintedOnActorSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData); \
	static void Execute_GetAllVertexColorsOnlyOnActor(UObject* O, FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexDetectGetColorsOnlyStruct gotAllVertexColorsWithSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData); \
	static void Execute_GetClosestVertexDataOnActor(UObject* O, FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexDetectInfoStruct detectedMeshWithSettings, FVertexDetectClosestVertexDataResultStruct closestVertexColorResult, FVertexDetectEstimatedColorAtHitLocationResultStruct estimatedColorAtHitLocationResult, FVertexDetectAvarageColorInAreaInfo avarageColorInAreaInfo, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData); \
	static TMap<UClothingAssetBase*,FVertexDetectClothSettingsStruct> Execute_GetSkeletalMeshClothPhysicsSettings(UObject* O, USkeletalMeshComponent* skeletalMeshComponentTryingToGetClothSettingsFor); \
	static void Execute_PaintedOnActor_AtLocation(UObject* O, FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintAtLocationStruct paintedAtLocationSettings, FVertexDetectClosestVertexDataResultStruct closestVertexColorResult, FVertexDetectEstimatedColorAtHitLocationResultStruct estimatedColorAtHitLocationResult, FVertexDetectAvarageColorInAreaInfo avarageColorInAreaInfo, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData); \
	static void Execute_PaintedOnActor_EntireMesh(UObject* O, FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintOnEntireMeshStruct paintedEntireMeshSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData); \
	static void Execute_PaintedOnActor_PaintColorSnippet(UObject* O, FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintColorSnippetStruct paintedColorSnippetSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData); \
	static void Execute_PaintedOnActor_WithinArea(UObject* O, FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPainthWithinAreaStruct paintedWithinAreaSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData); \
	virtual UObject* _getUObject() const { return nullptr; }


#define FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_INCLASS_IINTERFACE \
protected: \
	virtual ~IVertexPaintDetectionInterface() {} \
public: \
	typedef UVertexPaintDetectionInterface UClassType; \
	typedef IVertexPaintDetectionInterface ThisClass; \
	static void Execute_ClothBeginOverlappingMesh(UObject* O, UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp); \
	static void Execute_ClothEndOverlappingMesh(UObject* O, UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp); \
	static void Execute_ColorsAppliedOnActor(UObject* O, FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintStruct paintedOnActorSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData); \
	static void Execute_GetAllVertexColorsOnlyOnActor(UObject* O, FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexDetectGetColorsOnlyStruct gotAllVertexColorsWithSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData); \
	static void Execute_GetClosestVertexDataOnActor(UObject* O, FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexDetectInfoStruct detectedMeshWithSettings, FVertexDetectClosestVertexDataResultStruct closestVertexColorResult, FVertexDetectEstimatedColorAtHitLocationResultStruct estimatedColorAtHitLocationResult, FVertexDetectAvarageColorInAreaInfo avarageColorInAreaInfo, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData); \
	static TMap<UClothingAssetBase*,FVertexDetectClothSettingsStruct> Execute_GetSkeletalMeshClothPhysicsSettings(UObject* O, USkeletalMeshComponent* skeletalMeshComponentTryingToGetClothSettingsFor); \
	static void Execute_PaintedOnActor_AtLocation(UObject* O, FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintAtLocationStruct paintedAtLocationSettings, FVertexDetectClosestVertexDataResultStruct closestVertexColorResult, FVertexDetectEstimatedColorAtHitLocationResultStruct estimatedColorAtHitLocationResult, FVertexDetectAvarageColorInAreaInfo avarageColorInAreaInfo, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData); \
	static void Execute_PaintedOnActor_EntireMesh(UObject* O, FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintOnEntireMeshStruct paintedEntireMeshSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData); \
	static void Execute_PaintedOnActor_PaintColorSnippet(UObject* O, FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPaintColorSnippetStruct paintedColorSnippetSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData); \
	static void Execute_PaintedOnActor_WithinArea(UObject* O, FVertexDetectTaskResultInfo taskResultInfo, FVertexDetectMeshDataStruct const& meshData, FVertexPainthWithinAreaStruct paintedWithinAreaSettings, FVertexDetectAmountOfPaintedColorsOfEachChannel amountOfPaintedColorsOfEachChannel, FVertexDetectVertexColorsOnEachBone vertexColorsOnEachBone, FVertexDetectAdditionalDataToPassThrough additionalData); \
	virtual UObject* _getUObject() const { return nullptr; }


#define FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_11_PROLOG
#define FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_22_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_SPARSE_DATA \
	FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_RPC_WRAPPERS \
	FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_ACCESSORS \
	FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_CALLBACK_WRAPPERS \
	FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_INCLASS_IINTERFACE \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_22_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_SPARSE_DATA \
	FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_RPC_WRAPPERS_NO_PURE_DECLS \
	FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_ACCESSORS \
	FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_CALLBACK_WRAPPERS \
	FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h_14_INCLASS_IINTERFACE_NO_PURE_DECLS \
private: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


template<> VERTEXPAINTDETECTIONPLUGIN_API UClass* StaticClass<class UVertexPaintDetectionInterface>();

#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID FID_Build_U5M_Marketplace_Mac_Sync_LocalBuilds_PluginTemp_HostProject_Plugins_VertexPaintDetectionPlugin_Source_VertexPaintDetectionPlugin_Public_VertexPaintDetectionInterface_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS
